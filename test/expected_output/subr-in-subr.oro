<T>
  <k>
    .
  </k>
  <refs>
    .Map
  </refs>
  <extrinsics>
    SetItem ( "fluff" ) |-> subroutine ( 2 )
  </extrinsics>
  <extrs>
    <subr>
      <id>
        4
      </id>
      <attrs>
        "args" |-> ( varDecl ( "gaze at" : string_type ) , .VarDecls )
        "env" |-> ( .Map )
        "extrScope" |-> 3
      </attrs>
      <body>
        yseqToK ( ( yval ( | "?" | "Oro/Core/Flow/Label" ) |-> yval ( | "?" | "nowhere" ) )
          , .VarDecls )
      </body>
    </subr>
    <subr>
      <id>
        2
      </id>
      <attrs>
        "args" |-> ( varDecl ( "fluff" : string_type ) , .VarDecls )
        "env" |-> ( .Map )
        "extrScope" |-> 7
      </attrs>
      <body>
        yseqToK ( ( yval ( | "?" | "as" ) |-> [ ( yval ( | "?" | "Oro/Core/Flow/Label" ) |->
                yval ( | "?" | "nowhere" ) ) , .VarDecls ] yval
            ( | "?" | "Oro/Core/Subroutine/Define" ) |-> [ ( yval ( | "?" | "argument" ) |->
                yval ( | "?" | "gaze at" ) yval
                ( | "?" | "as" ) |-> yval ( | "?" | "string" ) ) , .VarDecls ] ) , ( ( yval
              ( | "?" | "gaze at" ) |-> yval ( | "?" | "fluff" ) ) , .VarDecls ) )
      </body>
    </subr>
    <unscannedSubrs>
      .List
    </unscannedSubrs>
  </extrs>
  <extrinsicScopes>
    1 |-> ( SetItem ( "fluff" ) |-> subroutine ( 2 ) )
    3 |-> ( SetItem ( "gaze at" ) |-> subroutine ( 4 )
      SetItem
      ( "fluff" ) |-> subroutine ( 2 ) )
    7 |-> ( SetItem ( "gaze at" ) |-> subroutine ( 4 )
      SetItem
      ( "fluff" ) |-> subroutine ( 2 ) )
  </extrinsicScopes>
  <scopeBin>
    3
  </scopeBin>
  <startup>
    true
  </startup>
  <context>
    <labels>
      .Map
    </labels>
    <env>
      .Map
    </env>
  </context>
  <globals>
    .Map
  </globals>
  <store>
    .Map
  </store>
  <storeBins>
    1 |-> ( 8 , .VarDecls )
    2 |-> ( 10 , .VarDecls )
  </storeBins>
  <arch>
    wordSize |-> 64
    endian |-> little
  </arch>
</T>
