<T> <k> "print" |-> "Hello, world!\n" </k> <refs> .Map </refs> <extrinsics> .Map </extrinsics> <scopeBin> 1 </scopeBin> <startup> true </startup> <context> <labels> yval ( | "?" | "jump forward" ) |-> jumpContext ( ( "Oro/Core/Flow/Label" |-> yval ( | "?" | "jump forward" ) ) ~> ( yval ( | "?" | "print" ) |-> "Hello, world!\n" ) , .Map , .Map ) </labels> <env> .Map </env> </context> <globals> "useless" |-> var ( int_type ( signed 32 ) , bytes ( 2 , 0 ) ) </globals> <store> 2 |-> memory ( nil  ( nil  ( nil  ( nil  .Bytes ) ) ) / 4 ) </store> <storeBins> .Map </storeBins> <arch> wordSize |-> 64 endian |-> little </arch> </T>
